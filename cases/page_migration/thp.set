#!2 MIGRATE_SRC: migratepages
#!2 RACE_SRC: race_with_gup race_with_process_vm_access race_with_map_fault_unmap race_with_fork race_with_mremap

#!3 MIGRATE_SRC: mbind
#!3 OPERATION: partial

. $TRDIR/setup_page_migration.sh

MIGRATE_SRC=__MARK_MIGRATE_SRC
RACE_SRC=__MARK_RACE_SRC

NUMA_NODE=2
THP=10

BACKEND=thp

EXPECTED_RETURN_CODE="START MIGRATION_PASSED EXIT"
INIT_NUMA_BALANCING=$(cat /proc/sys/kernel/numa_balancing)
AUTO_NUMA=

if [ "$RACE_SRC" == race_with_gup ] ; then
	TEST_PROGRAM="$test_alloc_generic -o page_migration -s $MIGRATE_SRC -B thp -b -d work -N $THP -M $(get_backend_pageflags $BACKEND)"
elif [ "$RACE_SRC" == race_with_process_vm_access ] ; then
	# TODO: really need busyloop flag?
	TEST_PROGRAM="$test_alloc_generic -o process_vm_access -s $MIGRATE_SRC -B thp -b -d work -N $THP -M $(get_backend_pageflags $BACKEND)"
	EXPECTED_RETURN_CODE="START EXIT"
elif [ "$RACE_SRC" == race_with_map_fault_unmap ] ; then
	_control() {
		for i in $(seq 5) ; do
			$test_alloc_generic -o iterate_mapping -N 10 -B thp &
			local pid=$!
			sleep 0.3
			for j in $(seq 100) ; do
				$PAGETYPES -p $pid -Nl -b thp,compound_head=thp,compound_head | grep -v offset > $TMPD/pagetypes1
				do_migratepages $pid 0 1
				$PAGETYPES -p $pid -Nl -b thp,compound_head=thp,compound_head | grep -v offset > $TMPD/pagetypes2
				do_migratepages $pid 1 0
				# echo $j
				# cat $TMPD/pagetypes1 $TMPD/pagetypes2
				diff -u $TMPD/pagetypes1 $TMPD/pagetypes2 >&2
			done
			kill -SIGUSR1 $pid 2> /dev/null
		done
		set_return_code EXIT
	}
	EXPECTED_RETURN_CODE="START EXIT"
elif [ "$RACE_SRC" == race_with_fork ] ; then
	_control() {
		for i in $(seq 5) ; do
			$test_alloc_generic -o fork_stress -B thp -d work -N $THP &
			local pid=$!
			sleep 0.3
			for j in $(seq 100) ; do
				$PAGETYPES -p $pid -Nl -b thp,compound_head=thp,compound_head | grep -v offset > $TMPD/pagetypes1
				do_migratepages $pid 0 1
				$PAGETYPES -p $pid -Nl -b thp,compound_head=thp,compound_head | grep -v offset > $TMPD/pagetypes2
				do_migratepages $pid 1 0
				# echo $j
				# cat $TMPD/pagetypes1 $TMPD/pagetypes2
				diff -u $TMPD/pagetypes1 $TMPD/pagetypes2 >&2
			done
			kill -SIGUSR1 $pid 2> /dev/null
		done
		set_return_code EXIT
	}
	EXPECTED_RETURN_CODE="START EXIT"
else
	# no race mbind/partial case
	TEST_PROGRAM="$test_alloc_generic -o page_migration -s mbind -B thp -b -P -d work -N $THP -M $(get_backend_pageflags $BACKEND)"
fi

check_thp_migration() {
	check_system_default
	check_thp_migrated
}

check_thp_migration_partial() {
	check_system_default
	check_thp_split_migrated
}

check_thp_migrated() {
	local before_head=$(sed -ne 1p $TMPD/pagetypes1 | cut -f2)
	local before_tail=$(sed -ne 2p $TMPD/pagetypes1 | cut -f2)
	local after_head=$(sed -ne 1p $TMPD/pagetypes2 | cut -f2)
	local after_tail=$(sed -ne 2p $TMPD/pagetypes2 | cut -f2)

	count_testcount "thp migration check"
	echo "$before_head/$before_tail => $after_head/$after_tail"
	if [ "$before_head" = "$after_head" ] ; then
		count_failure "thp not migrated (stay in a place)"
	else
		local ah16=$(printf "%d" 0x$after_head)
		local at16=$(printf "%d" 0x$after_tail)
		if [ "$[$ah16 + 1]" -eq "$at16" ] ; then
			count_success "thp migrated"
		else
			count_failure "maybe raw page migrated"
		fi
	fi
}

check_thp_split_migrated() {
	local before_head=$(sed -ne 1p $TMPD/pagetypes1 | cut -f2)
	local before_tail=$(sed -ne 2p $TMPD/pagetypes1 | cut -f2)
	local before_flag=$(sed -ne 1p $TMPD/pagetypes1 | cut -f4)
	local after_head=$(sed -ne 1p $TMPD/pagetypes2 | cut -f2)
	local after_tail=$(sed -ne 2p $TMPD/pagetypes2 | cut -f2)
	local after_flag=$(sed -ne 1p $TMPD/pagetypes2 | cut -f4)

 	count_testcount "thp split/migration check"
 	echo "$before_head/$before_tail => $after_head/$after_tail"
 	if ! [[ "$before_flag" =~ t ]] ; then
 		count_failure "Initial state is not a thp"
	elif [[ "$after_flag" =~ t ]] ; then
 		count_failure "The thp didn't split"
 	elif [ "$before_head" = "$after_head" ] || [ "$before_tail" = "$after_tail" ] ; then
 		count_failure "split raw pages did not migrated (stay in a place)"
	else
		count_success "thp split and migrated"
 	fi
}
