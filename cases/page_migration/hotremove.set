#!40 BACKEND: hugetlb_anon thp
#!40 OPERATION_SRC: noop hwpoison busy

. $TRDIR/setup_page_migration.sh

MIGRATE_SRC=hotremove
BACKEND=__MARK_BACKEND
BACKGROUND=__MARK_BACKGROUND
OPERATION_SRC=__MARK_OPERATION_SRC

[ ! "$SOFT_RETRY" ] && SOFT_RETRY=5

if [ "$OPERATION_SRC" == busy ] ; then
	BUSYOPT=-b
fi

NUMA_NODE=2
HUGEPAGESIZE=2048 # kB

EXPECTED_RETURN_CODE=""

PIPETIMEOUT=60

if [[ "$BACKEND" =~ hugetlb ]] ; then # hotremove
	HUGETLB=$[$MEMTOTAL/$HUGEPAGESIZE/2]
	HUGETLB_ALLOCATED=$[HUGETLB*4/5]
	# no pass fail ?
	EXPECTED_RETURN_CODE="START MIGRATION_PASSED HUGEPAGE_MIGRATED EXIT"
	TEST_PROGRAM="$test_alloc_generic -B $BACKEND -N $HUGETLB_ALLOCATED $BUSYOPT -L 'start:wait_after mmap_numa access:wait_after $MIGRATE_SRC:pageflags=$(get_backend_pageflags hugetlb_mapped) munmap:wait_before exit:wait_before'"
elif [[ "$BACKEND" =~ thp ]] ; then
	THP=$[$MEMTOTAL/$HUGEPAGESIZE/2]
	THP_ALLOCATED=$[THP*4/5]
	EXPECTED_RETURN_CODE="START MIGRATION_PASSED HUGEPAGE_MIGRATED THP_NOT_SPLIT EXIT"

	# low-priority known issue
	if [ "$OPERATION_SRC" == hwpoison ] ; then
		SKIP_THIS_TEST=true
	fi

	TEST_PROGRAM="$test_alloc_generic -B $BACKEND -N $THP_ALLOCATED $BUSYOPT -L 'start:wait_after mmap_numa access:wait_after $MIGRATE_SRC:pageflags=$(get_backend_pageflags $BACKEND) munmap:wait_before exit:wait_before'"
fi
