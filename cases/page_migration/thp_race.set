# #!2 MIGRATE_SRC: migratepages
# #!2 RACE_SRC: race_with_gup race_with_process_vm_access race_with_map_fault_unmap race_with_fork race_with_mremap race_with_procpid
# # race_with_madv_free
# 
# #!3 MIGRATE_SRC: mbind
# #!3 OPERATION: partial

. $TRDIR/setup_page_migration.sh

MIGRATE_SRC=__MARK_MIGRATE_SRC
RACE_SRC=__MARK_RACE_SRC

[ ! "$SOFT_RETRY" ] && SOFT_RETRY=5

NUMA_NODE=2
THP=10

BACKEND=thp

EXPECTED_RETURN_CODE="START EXIT"

read_procpid() {
	$PAGETYPES -p $pid -Nlr -a 0x700000000+0x10000000 > /dev/null
	cat /proc/$pid/numa_maps > /dev/null
	cat /proc/$pid/maps > /dev/null
	cat /proc/$pid/smaps > /dev/null
}

migrate_pingpong() {
	local pid=$1

	do_migratepages $pid 0 1
	do_migratepages $pid 1 0
}

background_iteration() {
	local pid=$1
	local func=$2

	while true ; do
		$func $pid

		if ! check_process_status $pid ; then
			break
		fi
	done
}

_control() {
	for i in $(seq 5) ; do
		$test_alloc_generic -B thp -N $THP -L "start mmap access busyloop" &
		local pid=$!
		sleep 0.3

		# background_iteration $pid read_procpid > /dev/null &
		background_iteration $pid migrate_pingpong > /dev/null &
		background_iteration $pid clear_soft_dirty > /dev/null &

		sleep 10

		kill -SIGUSR1 $pid 2> /dev/null
	done
	set_return_code EXIT
}
