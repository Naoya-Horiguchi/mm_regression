#!1 MIGRATE_SRC: migratepages mbind move_pages

. $TRDIR/setup_page_migration.sh

NUMA_NODE=2
HUGEPAGESIZE=2048 # kB
HUGETLB=500
HUGETLB_MOUNT=$WDIR/mount
EXPECTED_RETURN_CODE="START EXIT"

MIGRATE_SRC=__MARK_MIGRATE_SRC
PINGPONG_SRC=${MIGRATE_SRC}_pingpong

PINGPONG_DURATION=10

run_migrate_pingpong() {
	if [ "$MIGRATE_SRC" == migratepages ] ; then
		$test_alloc_generic -B pagecache -B anonymous -B thp -B hugetlb_anon -B hugetlb_shmem -N 10 -L "start mmap busyloop" > /dev/null 2>&1 &
		local pid=$!
		( while kill -0 $pid 2> /dev/null ; do
			  migratepages $pid 0 1 > /dev/null 2>&1
			  migratepages $pid 1 0 > /dev/null 2>&1
		  done ) &
	else
		echo "$test_alloc_generic -B pagecache -B anonymous -B thp -B hugetlb_anon -B hugetlb_shmem -N 10 -L 'start mmap access $PINGPONG_SRC' > /dev/null 2>&1 &"
		$test_alloc_generic -B pagecache -B anonymous -B thp -B hugetlb_anon -B hugetlb_shmem -N 10 -L "start mmap access $PINGPONG_SRC" > /dev/null 2>&1 &
	fi
}

_control() {
    echo_log "start hugepage_pingpong"
	grep ^pgmigrate /proc/vmstat | tee $TMPD/vmstat.pgmigrate1
	run_migrate_pingpong
    sleep $PINGPONG_DURATION
    pkill -SIGUSR1 -f $test_alloc_generic
	grep ^pgmigrate /proc/vmstat | tee $TMPD/vmstat.pgmigrate2
    set_return_code EXIT
}
