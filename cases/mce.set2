#!1 BACKEND: anonymous pagecache ksm
#!1 ERROR_TYPE: mce-srao hard-offline soft-offline madv_hard madv_soft
#!1 ACCESS_LATER: later_access avoid_access

# TODO: BACKEND=hugetlb_shmem?
#!2 BACKEND: hugetlb_anon hugetlb_file hugetlb_shmem thp
#!2 ERROR_TYPE: mce-srao hard-offline soft-offline madv_hard madv_soft
#!2 ACCESS_LATER: later_access avoid_access
#!2 ERROR_OFFSET: head tail

#!3 BACKEND: buddy free_hugepage
#!3 ERROR_TYPE: mce-srao hard-offline soft-offline

# remaining setting parameter
# BACKEND: hugetlb_shmem hugetlb_file huge_zero

. $TRDIR/lib/setup_mce_test.sh

BACKEND=__STR_BACKEND
ERROR_TYPE=__STR_ERROR_TYPE
ACCESS_LATER_OPTION=
INJOP=memory_error_injection:error_type=$ERROR_TYPE
#if __MARK_ACCESS_LATER == __MARK_ACCESS_LATER_later_access
INJOP="$INJOP:access_after_injection"
#endif

#if __MARK_ERROR_OFFSET == __MARK_ERROR_OFFSET_head
	ERROR_OFFSET=0
#elif __MARK_ERROR_OFFSET == __MARK_ERROR_OFFSET_tail
	ERROR_OFFSET=1
#endif

TEST_PROGRAM="lib/test_alloc_generic -B $BACKEND -N 32 -L 'start:wait_after mmap access:wait_after=1000000 $INJOP munmap:wait_before exit:wait_before' ${DEBUG:+-v}"
TEST_PROGRAM="lib/test_alloc_generic -B $BACKEND -N 2 -L 'start:wait_after mmap access:wait_after=1000000 $INJOP munmap:wait_before exit:wait_before' ${DEBUG:+-v}"

case "$BACKEND" in
	thp)
		THP=100
		;;
	hugetlb_free|hugetlb_anon|hugetlb_shmem|hugetlb_file)
		HUGETLB=100
		HUGEPAGESIZE=2048 # kB
		;;
	ksm)
		FALSENEGATIVE=false
		;;
	zero|huge_zero)
		FALSENEGATIVE=true
		;;
	buddy)
		unset TEST_PROGRAM

		_control() {
			# TODO: racy
			local pfn=$($PAGETYPES -b buddy -Nl | grep -v offset | head -n1 | cut -f1)
			if [ ! "$pfn" ] ; then
				set_return_code PFN_NOT_FOUND
				return 1
			fi
			$MCEINJECT -e $ERROR_TYPE -a 0x$pfn
			set_return_code INJECT
			set_return_code EXIT
		}
		;;
	free_hugepage)
		HUGETLB=300
		unset TEST_PROGRAM

		_control() {
			# TODO: racy
			TARGET_PAGEFLAG="huge,compound_head,mmap=huge,compound_head"
			local pfn=$($PAGETYPES -b $TARGET_PAGEFLAG -Nl | grep -v offset | head -n1 | cut -f1)
			if [ ! "$pfn" ] ; then
				set_return_code PFN_NOT_FOUND
				return 1
			fi
			$MCEINJECT -e $ERROR_TYPE -a 0x$pfn
			set_return_code INJECT
			set_return_code EXIT
		}
		;;
esac

if [[ __STR_ERROR_TYPE =~ (mce-srao|hard-offline|madv_hard) ]] ; then
	#if __MARK_ACCESS_LATER == __MARK_ACCESS_LATER_later_access
	EXPECTED_RETURN_CODE="INJECT ACCESS KILLED_IN_ACCESS"
	#else
	EXPECTED_RETURN_CODE="INJECT EXIT"
	#endif
else
	#if __MARK_ACCESS_LATER == __MARK_ACCESS_LATER_later_access
	EXPECTED_RETURN_CODE="INJECT ACCESS ACCESS_SUCCEEDED EXIT"
	#else
	EXPECTED_RETURN_CODE="INJECT EXIT"
	#endif
fi
