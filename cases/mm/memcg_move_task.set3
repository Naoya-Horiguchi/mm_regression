#! {}

. $TRDIR/lib/setup_mmgeneric.sh
. $TRDIR/lib/setup_memcg.sh

EXPECTED_RETURN_CODE="MOVE_PASS EXIT"

_prepare() {
	create_cgroup || return 1
}

_cleanup() {
	delete_cgroup || return 1
}

_control() {
	(
		eval 'move_process_cgroup test1 $$'
		sleep 1000
	) &
	disown $!
	(
		eval 'move_process_cgroup test1 $$'
		sleep 1000
	) &
	disown $!
	# take some time until created tasks are registered into the cgroup
	sleep 0.5

	get_tasks_cgroup test1 > $TMPD/test1_tasks_1
	get_tasks_cgroup test2 > $TMPD/test2_tasks_1
	# cgclassify -g cpu,memory:test2 $(cat $MEMCGDIR/test1/tasks)
	move_process_cgroup test2 $(get_tasks_cgroup test1)
	if [ $? -eq 0 ] ; then
		set_return_code MOVE_PASS
	else
		set_return_code MOVE_FAIL
	fi
	get_tasks_cgroup test1 > $TMPD/test1_tasks_2
	get_tasks_cgroup test2 > $TMPD/test2_tasks_2
	set_return_code "EXIT"
	return 0
}

_check() {
	count_testcount
	if diff $TMPD/test1_tasks_1 $TMPD/test2_tasks_2 2> /dev/null >&2 ; then
		count_success "processes moved from memory:test1 to memory:test2"
	else
		count_failure "processes failed to move from memory:test1 to memory:test2"
		echo "tasks before migration: test1 ($(cat $TMPD/test1_tasks_1)), test2 ($(cat $TMPD/test2_tasks_1))"
		echo "tasks after migration: test1 ($(cat $TMPD/test1_tasks_2)), test2 ($(cat $TMPD/test2_tasks_2))"
	fi
}
