[ ! "$PMEM_MODE" ] && PMEM_MODE=devdax

_prepare() {
	# ndctl destroy-namespace namespace0.0 --force
	ndctl create-namespace -f -e namespace0.0 -m devdax --align=2M
	# ndctl create-namespace -f -e namespace0.0 -m sector -l 4096
}


_cleanup() {
	pkill -9 -f test_devdax
	sync
	ndctl destroy-namespace namespace0.0
}

_control() {
	if [ "$FTRACE" ] ; then
		echo "trace-cmd record -p function_graph -g __do_page_fault lib/test_devdax $MAP_SYNC"
		trace-cmd record -p function_graph -g __do_page_fault lib/test_devdax $MAP_SYNC
	elif [ "$FTRACE_EVENT" ] ; then
		echo "trace-cmd record -e fs_dax:* lib/test_devdax $MAP_SYNC"
		trace-cmd record -e fs_dax:* lib/test_devdax $MAP_SYNC
	else
		echo "lib/test_devdax $MAP_SYNC"
		lib/test_devdax $MAP_SYNC

		if [ $? -eq 0 ] ; then
			set_return_code DEVDAX_MAPPING_DONE
		fi
	fi

	set_return_code EXIT
}

_check() {
	if [ -e "$TMPD/trace" ] ; then
		count_testcount
		if grep -q dax_pmd_fault_done $TMPD/trace ; then
			count_success "dax_pmd_fault_done is called"
		else
			count_failure "dax_pmd_fault_done is not called"
		fi

		count_testcount
		if grep -q NOPAGE $TMPD/trace ; then
			count_success "dax_pmd_fault_done: return code NOPAGE"
		elif grep -q FALLBACK $TMPD/trace ; then
			count_failure "dax_pmd_fault_done: return code FALLBACK"
		else
			count_failure "dax_pmd_fault_done: unknown return code"
		fi
	fi
}
