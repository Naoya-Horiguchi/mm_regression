#!1 THP_TYPE: base shared_thp double_mapping pmd_split thp_split
#!1 OPERATION_SRC: noop busy

. $TRDIR/lib/setup_thp_migration.sh

MAPTYPE=mmap_numa:preferred_cpu_node=0:preferred_mem_node=0
FORK=
SPLIT_THP=
HUGEPAGE_CHECKCODE=
ACTION=hotremove:pageflags=$(get_backend_pageflags thp)

BACKEND=__STR_BACKEND
BACKGROUND=__STR_BACKGROUND
OPERATION_SRC=__STR_OPERATION_SRC
PIPETIMEOUT=60

HUGEPAGESIZE=2048
THP=$[$MEMTOTAL/$HUGEPAGESIZE/2]
THP_ALLOCATED=$[THP*4/5]

#if __MARK_OPERATION_SRC == __MARK_OPERATION_SRC_busy
ACTION="$ACTION:busyloop"
#endif

#if __MARK_THP_TYPE == __MARK_THP_TYPE_base
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_shared_thp
FORK=fork:wait_after
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_double_mapping
FORK=fork:wait_after
SPLIT_THP=split_thp:only_pmd
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_pmd_split
SPLIT_THP=split_thp:only_pmd
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_thp_split
SPLIT_THP=split_thp
HUGEPAGE_CHECKCODE=HUGEPAGE_NOT_EXIST
ACTION=hotremove:pageflags=$(get_backend_pageflags anonymous)
#endif

# TODO: low-priority known issue
#if __MARK_OPERATION_SRC == __MARK_OPERATION_SRC_hwpoison
SKIP_THIS_TEST=true
#endif

TEST_PROGRAM="lib/test_alloc_generic -B thp -N $THP_ALLOCATED -L '$MAPTYPE access:wait_after $FORK $SPLIT_THP noop:wait_after $ACTION munmap:wait_before exit:wait_before'"
EXPECTED_RETURN_CODE="START MIGRATION_PASSED $HUGEPAGE_CHECKCODE EXIT"
