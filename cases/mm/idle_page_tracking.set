#!1 THP_SPLIT_METHOD: base

. $TRDIR/setup_mmgeneric.sh

PIPETIMEOUT=20
EACH_BUFSIZE_IN_PAGE=$[1024*16]

HUGETLB=100
TEST_PROGRAM="$test_idle_page_tracking -n $EACH_BUFSIZE_IN_PAGE $WDIR/testfile"
TEST_PROGRAM="$test_alloc_generic -a allocate_exit -o busyloop -B pagecache -B anonymous -B thp -B hugetlb_anon -n $EACH_BUFSIZE_IN_PAGE -w after_allocate -w before_free -w exit -d work"
EXPECTED_RETURN_CODE="START EXIT"

_prepare() {
	prepare_mm_generic || return 1
	# TODO: Wait?
	echo "$test_alloc_generic -a allocate_exit -o busyloop -n $[$(grep ^MemTotal: /proc/meminfo | awk '{print $2}') * 3 / 4 / 4] -B anonymous &"
	$test_alloc_generic -a allocate_exit -o busyloop -n $[$(grep ^MemTotal: /proc/meminfo | awk '{print $2}') * 2 / 4 / 4] -B anonymous -d work &
	sleep 3
	free
}

_cleanup() {
	cleanup_mm_generic
}

_control() {
    local pid="$1"
    local line="$2"

    echo "$line" | tee -a $OFILE
    case "$line" in
		"page_fault_done")
			get_mm_stats $pid 1 > /dev/null

			echo_log $mark_idle_all write
			$mark_idle_all write

			get_pagetypes $pid pagetypes.idle.1 -ra 0x700000000+0x10000000 -b idle_page

			kill -SIGUSR1 $pid
			;;
		"before_free")
			sleep 1

			echo_log $mark_idle_all read
			$mark_idle_all read

			get_pagetypes $pid pagetypes.idle.2 -ra 0x700000000+0x10000000 -b idle_page

			get_mm_stats $pid 2 > /dev/null
			kill -SIGUSR1 $pid
			;;
		"just before exit")
			kill -SIGUSR1 $pid
			set_return_code EXIT
			return 0
			;;
		"entering busy loop")
			sleep 2

			echo_log $mark_idle_all read
			$mark_idle_all read

			get_pagetypes $pid pagetypes.idle.3 -ra 0x700000000+0x10000000 -b idle_page

			kill -SIGUSR1 $pid
			;;
        *)
            ;;
    esac
    return 1
}

_check() {
	true
}
