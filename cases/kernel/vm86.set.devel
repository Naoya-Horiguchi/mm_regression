##!1 MOUNT_OPTION: min_size min_max_size

# . $TRDIR/setup_mmgeneric.sh
. $TCDIR/lib/mm.sh

PRIORITY=15

THP=true

EXPECTED_RETURN_CODE="START RESERVED RESV_CONSUMED RESV_USEDUP RESV_REVERTED EXIT"

_prepare() {
	true
}

_control() {
	local tmp_hugetlb_mount=$(mktemp -d)
	show_hugetlb_pool

	# local mountcmd="mount -t hugetlbfs -o $MOUNT_OPTION none $tmp_hugetlb_mount"
	# echo $mountcmd
	# $mountcmd
	# if [ $? -ne 0 ] ; then
	# 	echo "mount failed"
	# 	set_return_code MOUNT_FAILED
	# 	return
	# fi
	# show_hugetlb_pool
	# if [ "$(get_hugepage_reserved)" -eq 5 ] ; then
	# 	set_return_code RESERVED
	# fi

	$test_alloc_generic -B thp -N 1 -L "mmap access vm86" &
	# sleep 0.1
	# show_hugetlb_pool
	# if [ "$(get_hugepage_reserved)" -eq 3 ] ; then
	# 	set_return_code RESV_CONSUMED
	# fi

	# $test_alloc_generic -B hugetlb_file -N 10 -w $tmp_hugetlb_mount -f base2 -L "mmap access:wait_after" &
	# sleep 0.1
	# show_hugetlb_pool
	# if [ "$(get_hugepage_reserved)" -eq 0 ] ; then
	# 	set_return_code RESV_USEDUP
	# fi

	# kill_all_subprograms
	# rm -f $tmp_hugetlb_mount/hugetlbfs/*
	# show_hugetlb_pool
	# if [ "$(get_hugepage_reserved)" -eq 5 ] ; then
	# 	set_return_code RESV_REVERTED
	# fi

	set_return_code EXIT
}

_cleanup() {
	true
}

_check() {
	true
}
