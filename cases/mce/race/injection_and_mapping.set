#! BACKEND: anonymous pagecache ksm zero hugetlb_anon thp
#! ERROR_TYPE: mce-srao hard-offline soft-offline

# Not care about head/tail difference for now.

. $TRDIR/setup_mce_test.sh

BACKEND=__MARK_BACKEND
ERROR_TYPE=__MARK_ERROR_TYPE
TARGET_PAGEFLAGS=$(get_backend_pageflags $BACKEND)

RACE_ITERATIONS=10
MONARCH_TIMEOUT=20000000

# TODO: goto common place
case "$BACKEND" in
	thp)
		THP=10
		;;
	hugetlb_free|hugetlb_anon|hugetlb_shmem|hugetlb_file)
		HUGETLB=100
		HUGEPAGESIZE=2048 # kB
		;;		 
esac

EXPECTED_RETURN_CODE="START EXIT"

_control() {
    local pid=

    for i in $(seq $RACE_ITERATIONS) ; do
		$test_alloc_generic -a iterate_mapping -B thp -N 8 &
		pid=$!

		get_pagetypes $pid pagetypes.1 -b "$TARGET_PAGEFLAGS" -Nrla 0x700000000+0x10000000
		# Too much MCE easyly triggers kernel panic.
		if [ "$ERROR_TYPE" == mce-srao ] ; then
			cat $TMPD/pagetypes.1 | cut -f2 | head -n4 | while read line ; do
                $MCEINJECT -e $ERROR_TYPE -a 0x$line &
            done
		else
			cat $TMPD/pagetypes.1 | cut -f2 | while read line ; do
                $MCEINJECT -e $ERROR_TYPE -a 0x$line &
            done
		fi

        kill_all_subprograms
    done
    set_return_code EXIT
}
