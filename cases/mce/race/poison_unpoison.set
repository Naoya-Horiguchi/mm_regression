#! BACKEND: buddy hugetlb_free anonymous pagecache hugetlb_anon hugetlb_shmem hugetlb_file ksm thp zero huge_zero
#! ERROR_TYPE: mce-srao hard-offline soft-offline

. $TRDIR/setup_mce_test.sh

EXPECTED_RETURN_CODE="START EXIT"

BACKEND=__MARK_BACKEND
ERROR_TYPE=__MARK_ERROR_TYPE
TARGET_PAGEFLAGS=$(get_backend_pageflags $BACKEND)

# TODO: goto common place
case "$BACKEND" in
	thp)
		THP=100
		;;
	hugetlb_free|hugetlb_anon|hugetlb_shmem|hugetlb_file)
		HUGETLB=300
		HUGEPAGESIZE=2048 # kB
		HUGETLB_MOUNT=$WDIR/hugetlbfs
		;;
esac

POISON_ITERATION=100
TIMEOUT=5

random_poison() {
    local i=
    local j=
    local pos=
    local pid=$1
    local range=

	case "$BACKEND" in
		buddy|hugetlb_free)
			$PAGETYPES -Nlr -b "$TARGET_PAGEFLAGS" | grep -v offset | \
				cut -f1 | sed -e 's/^/0x/' > $TMPD/target_pfns
			;;
		*)
			$PAGETYPES -Nlr -p $pid -b "$TARGET_PAGEFLAGS" -a 0x700000000, \
				| grep -v offset | cut -f1 | sed -e 's/^/0x/' > $TMPD/target_pfns
			;;
	esac

	while read line ; do
		$PAGETYPES -N -p $pid -a $line -X 2> /dev/null
	done < $TMPD/target_pfns
	pkill -9 -f random_unpoison
}

random_unpoison() {
	while true ; do
        $PAGETYPES -N -b hwpoison -x
    done
}

BACKENDOPT="-B pagecache -B anonymous -B thp -B hugetlb_anon -B hugetlb_shmem -B hugetlb_file -B ksm -B normal_shmem"

_control() {
    local pid=

	$test_alloc_generic $BACKENDOPT -N 8 -b -L 'start mmap access busyloop' &
    pid=$!

    random_poison $pid &
    local pid_poison=$!
    random_unpoison $pid &
    local pid_unpoison=$!
	echo "Running poison/unpoison threads for $TIMEOUT seconds ..."
	sleep $TIMEOUT
	kill -9 $pid_poison $pid_unpoison
    kill -SIGUSR1 $pid
    set_return_code EXIT
}
