#! BACKEND: anonymous pagecache ksm zero hugetlb_anon thp
#! ERROR_TYPE: mce-srao hard-offline soft-offline

# Not care about head/tail difference for now.
PRIORITY=13

. $TRDIR/lib/setup_mce_test.sh || exit 1

BACKEND=__MARK_BACKEND
ERROR_TYPE=__MARK_ERROR_TYPE
TARGET_PAGEFLAGS=$(get_backend_pageflags $BACKEND)

RACE_ITERATIONS=20
MONARCH_TIMEOUT=20000000

if [[ "$BACKEND" =~ (ksm|zero) ]] ; then
	SKIP_THIS_TEST=true
fi

# TODO: goto common place
case "$BACKEND" in
	thp)
		THP=10
		;;
	hugetlb_free|hugetlb_anon|hugetlb_shmem|hugetlb_file)
		HUGETLB=100
		HUGEPAGESIZE=2048 # kB
		;;
esac

EXPECTED_RETURN_CODE="START EXIT"

_control() {
	local pid=

	echo 1 > /sys/kernel/debug/mce/fake_panic
	echo "5 4 1 5" > /proc/sys/kernel/printk
	for i in $(seq $RACE_ITERATIONS) ; do
		lib/test_alloc_generic -B $BACKEND -N 10 -L iterate_mapping &
		pid=$!

		get_pagetypes $pid pagetypes.1 -b "$TARGET_PAGEFLAGS" -Nrla 0x700000000+0x10000000 > /dev/null
		if [ "$ERROR_TYPE" == mce-srao ] ; then
			cat $TMPD/pagetypes.1 | cut -f2 | head -n1 | while read line ; do
				sleep 1
				$MCEINJECT -q -e $ERROR_TYPE -a 0x$line &
			done
		else
			cat $TMPD/pagetypes.1 | cut -f2 | while read line ; do
				$MCEINJECT -q -e $ERROR_TYPE -a 0x$line &
			done
		fi

		kill_all_subprograms
	done
	echo 0 > /sys/kernel/debug/mce/fake_panic
	echo "7 4 1 7" > /proc/sys/kernel/printk
	set_return_code EXIT
}

_check() {
	check_kernel_message -v "kernel panic"
}
