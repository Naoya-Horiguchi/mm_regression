##!1 BACKEND: anonymous pagecache ksm zero
##!1 ERROR_TYPE: mce-srao hard-offline soft-offline madv_hard madv_soft

#!2 BACKEND: clean_pagecache dirty_pagecache anonymous thp
#!2 ERROR_TYPE: mce-srao hard-offline soft-offline
#!2 HOSTBACKEND: hostanon hostthp

# environment variable VM should be given via environment variable
# VM=f21a

# # TODO: assuming that sshvm is installed (via deploy_vm_image)
VMIP=$(sshvm -i -n default $VM 2> /dev/null)

. $TRDIR/lib/setup_mce_kvm.sh || return 1

ERROR_TYPE=__STR_ERROR_TYPE
BACKEND=__STR_BACKEND
HOSTBACKEND=__STR_HOSTBACKEND

# TODO: host ksm affects the result
# KSM=true

# TODO: handling host backend
if [ __MARK_HOSTBACKEND == hostanon ] ; then
	unset THP
elif [ __MARK_HOSTBACKEND == hostthp ] ; then
	THP=always
fi

if [ "$BACKEND" == zero ] ; then
	PRIORITY=15 # low priority
fi

TARGET_PAGETYPES="$(get_backend_pageflags $BACKEND)"
if [ "$BACKEND" == clean_pagecache ] ; then
	EXPECTED_RETURN_CODE="START GOT_HPA GUEST_ALIVE GUEST_PROC_ALIVE GUEST_PROC_ALIVE_LATER_ACCESS"
elif [ "$BACKEND" == dirty_pagecache ] ; then
	EXPECTED_RETURN_CODE="START GOT_HPA GUEST_ALIVE GUEST_PROC_ALIVE GUEST_PROC_KILLED_LATER_ACCESS"
elif [ "$BACKEND" == anonymous ] ; then
	EXPECTED_RETURN_CODE="START GOT_HPA GUEST_ALIVE GUEST_PROC_ALIVE GUEST_PROC_KILLED_LATER_ACCESS"
elif [ "$BACKEND" == thp ] ; then
	EXPECTED_RETURN_CODE="START GOT_HPA GUEST_ALIVE GUEST_PROC_ALIVE GUEST_PROC_KILLED_LATER_ACCESS"
fi

_control() { control_mce_kvm; }
if [ "$ERROR_TYPE" == soft-offline ] ; then
	_check() { check_mce_kvm_soft_offline; }
	EXPECTED_RETURN_CODE="START GOT_HPA GUEST_ALIVE GUEST_PROC_ALIVE GUEST_PROC_ALIVE_LATER_ACCESS"
else
	_check() { check_mce_kvm; }
fi
